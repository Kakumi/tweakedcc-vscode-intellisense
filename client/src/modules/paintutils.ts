import * as vscode from "vscode";
import BaseModule from "./base.module";
import { Method } from "../interfaces/method";

export default class paintutilsModule extends BaseModule {
  constructor() {
    super(`paintutils`, `Utilities for drawing more complex graphics, such as pixels, lines andimages.`);
  }

  protected getMethods(): Method[] {
    return [{"label":"parseImage","detail":"parseImage(image: string): table | paintutils.drawImage.","parameters":["image: string"],"documentation":"Parses an image from a multi-line string\n\n**Parameters:**\n- **image: string** The string containing the raw-image data.\n\n**Returns:**\n- table The parsed image data, suitable for use with\n- paintutils.drawImage."},{"label":"loadImage","detail":"loadImage(path: string): table | paintutils.drawImage,","parameters":["path: string"],"documentation":"Loads an image from a file.\n\n**Parameters:**\n- **path: string** The file to load.\n\n**Returns:**\n- table | nil The parsed image data, suitable for use with\n- paintutils.drawImage, or nil if the file does not exist.\n\n**Usage:**\n\nLoad an image and draw it.\n\n```\n\nlocal image = paintutils.loadImage(\"data/example.nfp\")\n\npaintutils.drawImage(image, term.getCursorPos())\n\n```"},{"label":"drawPixel","detail":"drawPixel(xPos: number, yPos: number, colour?: number): void","parameters":["xPos: number","yPos: number","colour?: number"],"documentation":"Draws a single pixel to the current term at the specified position.\n\n**Parameters:**\n- **xPos: number** The x position to draw at, where 1 is the far left.\n- **yPos: number** The y position to draw at, where 1 is the very top.\n- **colour?: number** The color of this pixel. This will be\nthe current background colour if not specified."},{"label":"drawLine","detail":"drawLine(startX: number, startY: number, endX: number, endY: number, colour?: number): void","parameters":["startX: number","startY: number","endX: number","endY: number","colour?: number"],"documentation":"Draws a straight line from the start to end position.\n\n**Parameters:**\n- **startX: number** The starting x position of the line.\n- **startY: number** The starting y position of the line.\n- **endX: number** The end x position of the line.\n- **endY: number** The end y position of the line.\n- **colour?: number** The color of this pixel. This will be\nthe current background colour if not specified.\n\n**Usage:**\n\npaintutils.drawLine(2, 3, 30, 7, colors.red)"},{"label":"drawBox","detail":"drawBox(startX: number, startY: number, endX: number, endY: number, colour?: number): void","parameters":["startX: number","startY: number","endX: number","endY: number","colour?: number"],"documentation":"Draws the outline of a box on the current term from the specified start\nposition to the specified end position.\n\n**Parameters:**\n- **startX: number** The starting x position of the line.\n- **startY: number** The starting y position of the line.\n- **endX: number** The end x position of the line.\n- **endY: number** The end y position of the line.\n- **colour?: number** The color of this pixel. This will be\nthe current background colour if not specified.\n\n**Usage:**\n\npaintutils.drawBox(2, 3, 30, 7, colors.red)"},{"label":"drawFilledBox","detail":"drawFilledBox(startX: number, startY: number, endX: number, endY: number, colour?: number): void","parameters":["startX: number","startY: number","endX: number","endY: number","colour?: number"],"documentation":"Draws a filled box on the current term from the specified start position to\nthe specified end position.\n\n**Parameters:**\n- **startX: number** The starting x position of the line.\n- **startY: number** The starting y position of the line.\n- **endX: number** The end x position of the line.\n- **endY: number** The end y position of the line.\n- **colour?: number** The color of this pixel. This will be\nthe current background colour if not specified.\n\n**Usage:**\n\npaintutils.drawFilledBox(2, 3, 30, 7, colors.red)"},{"label":"drawImage","detail":"drawImage(image: table, xPos: number, yPos: number): void","parameters":["image: table","xPos: number","yPos: number"],"documentation":"Draw an image loaded by paintutils.parseImage or paintutils.loadImage.\n\n**Parameters:**\n- **image: table** The parsed image data.\n- **xPos: number** The x position to start drawing at.\n- **yPos: number** The y position to start drawing at."}];
  }
}
