import * as vscode from "vscode";
import BaseModule from "./base.module";
import { Method } from "../interfaces/method";

export default class diskModule extends BaseModule {
  constructor() {
    super(`disk`, `Interact with disk drives.`);
  }

  protected getMethods(): Method[] {
    return [{"label":"isPresent","detail":"isPresent(name: string): boolean","parameters":["name: string"],"documentation":"Checks whether any item at all is in the disk drive\n\n**Parameters:**\n- **name: string** The name of the disk drive.\n\n**Returns:**\n- boolean If something is in the disk drive.\n\n**Usage:**\n\ndisk.isPresent(\"top\")"},{"label":"getLabel","detail":"getLabel(name: string): string | not","parameters":["name: string"],"documentation":"Get the label of the floppy disk, record, or other media within the given\ndisk drive.\n\n**Parameters:**\n- **name: string** The name of the disk drive.\n\n**Returns:**\n- string | nil The name of the current media, or nil if the drive is\n- not present or empty."},{"label":"setLabel","detail":"setLabel(name: string, label: string): void","parameters":["name: string","label: string"],"documentation":"Set the label of the floppy disk or other media\n\n**Parameters:**\n- **name: string** The name of the disk drive.\n- **label: string** | nil The new label of the disk"},{"label":"hasData","detail":"hasData(name: string): boolean","parameters":["name: string"],"documentation":"Check whether the current disk provides a mount.\n\n**Parameters:**\n- **name: string** The name of the disk drive.\n\n**Returns:**\n- boolean If the disk is present and provides a mount."},{"label":"getMountPath","detail":"getMountPath(name: string): string | contain","parameters":["name: string"],"documentation":"Find the directory name on the local computer where the contents of the\ncurrent floppy disk (or other mount) can be found.\n\n**Parameters:**\n- **name: string** The name of the disk drive.\n\n**Returns:**\n- string | nil The mount's directory, or nil if the drive does not\n- contain a floppy or computer."},{"label":"hasAudio","detail":"hasAudio(name: string): boolean","parameters":["name: string"],"documentation":"Whether the current disk is a music disk as opposed to a floppy disk\nor other item.\n\n**Parameters:**\n- **name: string** The name of the disk drive.\n\n**Returns:**\n- boolean If the disk is present and has audio saved on it."},{"label":"getAudioTitle","detail":"getAudioTitle(name: string): string | record","parameters":["name: string"],"documentation":"Get the title of the audio track from the music record in the drive.\n\n**Parameters:**\n- **name: string** The name of the disk drive.\n\n**Returns:**\n- string | false | nil The track title, false if there is not a music\n- record in the drive or nil if no drive is present."},{"label":"playAudio","detail":"playAudio(name: string): void","parameters":["name: string"],"documentation":"Starts playing the music record in the drive.\n\n**Parameters:**\n- **name: string** The name of the disk drive.\n\n**Usage:**\n\ndisk.playAudio(\"bottom\")"},{"label":"stopAudio","detail":"stopAudio(name: string): void","parameters":["name: string"],"documentation":"Stops the music record in the drive from playing, if it was started with\ndisk.playAudio.\n\n**Parameters:**\n- **name: string** The name o the disk drive."},{"label":"eject","detail":"eject(name: string): void","parameters":["name: string"],"documentation":"Ejects any item currently in the drive, spilling it into the world as a loose item.\n\n**Parameters:**\n- **name: string** The name of the disk drive.\n\n**Usage:**\n\ndisk.eject(\"bottom\")"},{"label":"getID","detail":"getID(name: string): string","parameters":["name: string"],"documentation":"Returns a number which uniquely identifies the disk in the drive.\n\n**Parameters:**\n- **name: string** The name of the disk drive.\n\n**Returns:**\n- string | nil The disk ID, or nil if the drive does not contain a floppy disk."}];
  }
}
